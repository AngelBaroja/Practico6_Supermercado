/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Jframe;

import java.util.TreeSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import practico6.Producto;
import practico6.Supermercado_DeTodo;

/**
 *
 * @author El Angel
 */
public class GestionProducto extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestionProducto
     */
    public GestionProducto() {
        initComponents();
        armarTabla();
        cargarCombo(); 
        cargarFilas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboFiltrarCategoria = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProductos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldDescripcion = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        jComboCategoria = new javax.swing.JComboBox<>();
        jSpinnerStock = new javax.swing.JSpinner();
        jButtonBusqueda = new javax.swing.JButton();
        jButtonCerrar = new javax.swing.JButton();
        jButtonNuevo = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel8.setText("Gestion de Productos");

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Filtrar por Categoria:");

        jComboFiltrarCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboFiltrarCategoriaItemStateChanged(evt);
            }
        });

        jTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableProductos);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setText("Codigo:");

        jLabel11.setText("Descripcion:");

        jLabel12.setText("Precio:");

        jLabel13.setText("Rubro:");

        jLabel14.setText("Stock");

        jComboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinnerStock, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextFieldCodigo)
                        .addComponent(jTextFieldDescripcion)
                        .addComponent(jTextFieldPrecio)
                        .addComponent(jComboCategoria, 0, 164, Short.MAX_VALUE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jSpinnerStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jButtonBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        jButtonBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBusquedaActionPerformed(evt);
            }
        });

        jButtonCerrar.setText("Cerrar");
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        jButtonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/nuevo.png"))); // NOI18N
        jButtonNuevo.setText("Nuevo");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.setEnabled(false);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/eliminar.png"))); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar.png"))); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jButtonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(23, 23, 23)
                                .addComponent(jButtonActualizar))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jButtonCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButtonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel9)
                        .addGap(37, 37, 37)
                        .addComponent(jComboFiltrarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jComboFiltrarCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButtonBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButtonCerrar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBusquedaActionPerformed
        
        try {
            int codigo = Integer.parseInt(jTextFieldCodigo.getText());
            Producto producto = Supermercado_DeTodo.buscarXcodigo(codigo);
            if (producto != null) {
                jTextFieldDescripcion.setText(producto.getDescripcion());
                jTextFieldPrecio.setText(String.valueOf(producto.getPrecio()));
                jComboCategoria.setSelectedItem(producto.getRubro());
                jSpinnerStock.setValue(producto.getStock());
            } else {
                JOptionPane.showMessageDialog(null, "Producto no encontrado, ingrese el codigo correcto.", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese un numero valido", "Error de formato", JOptionPane.ERROR_MESSAGE);
        }      
    }//GEN-LAST:event_jButtonBusquedaActionPerformed
    private int numero=0;
    private void jComboFiltrarCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboFiltrarCategoriaItemStateChanged
        
        if (numero > 1) {
            if (jComboFiltrarCategoria.getSelectedItem().toString() == "-") {
                borrarFilasTablas();
                cargarFilas();
            } else {
                borrarFilasTablas();
                String rubro=jComboFiltrarCategoria.getSelectedItem().toString();
                for (Producto listaProducto : Supermercado_DeTodo.listaProductos) {
                    if (listaProducto.getRubro()==rubro) {
                        modelo.addRow(new Object []{
                             listaProducto.getCodigo(),
                             listaProducto.getDescripcion(),
                             listaProducto.getPrecio(),
                             listaProducto.getRubro(),
                             listaProducto.getStock()  
                        });
                    }
                }
            }
        }
        numero++;
    }//GEN-LAST:event_jComboFiltrarCategoriaItemStateChanged

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        if(comprobarCasillas()){
            jButtonGuardar.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Perfecto ahora puede guarda el Nuevo Producto");
        }
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        if (comprobarCasillas()) {
       int codigo=Integer.parseInt(jTextFieldCodigo.getText());
       String descripcion= jTextFieldDescripcion.getText();
       double precio=Double.parseDouble(jTextFieldPrecio.getText());
       String rubro=jComboCategoria.getSelectedItem().toString();
       int stock=(Integer) jSpinnerStock.getValue();
       Producto producto=new Producto(codigo, descripcion, precio, rubro, stock);
       Supermercado_DeTodo.listaProductos.add(producto);
       JOptionPane.showMessageDialog(this, "Producto Guardado");
       jButtonGuardar.setEnabled(false);
       limpiarCasillas();
       borrarFilasTablas();
       cargarFilas(); 
       }
    
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        if (comprobarCasillas()) {            
            int codigo = Integer.parseInt(jTextFieldCodigo.getText());
            String descripcion = jTextFieldDescripcion.getText();
            double precio = Double.parseDouble(jTextFieldPrecio.getText());
            String rubro = jComboCategoria.getSelectedItem().toString();
            int stock = (Integer) jSpinnerStock.getValue();
            Producto producto = new Producto(codigo, descripcion, precio, rubro, stock);
            Supermercado_DeTodo mercado = new Supermercado_DeTodo();
            boolean comprobador=false;
            for (Producto listaProducto : Supermercado_DeTodo.listaProductos) {
                if (listaProducto.getCodigo() == producto.getCodigo()) {
                    mercado.actualizar(producto);
                    comprobador=true;
                    break;
                }
            }
            if (comprobador) {
                limpiarCasillas();
                borrarFilasTablas();
                cargarFilas();
                JOptionPane.showMessageDialog(this, "Producto encontrado y Actualizado");
            }else{
                JOptionPane.showMessageDialog(this, "Codigo de Producto no encontrado");
            }
        }
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
         if (comprobarCasillas()) {            
            int codigo = Integer.parseInt(jTextFieldCodigo.getText().toString());
            String descripcion = jTextFieldDescripcion.getText().toString();
            double precio = Double.parseDouble(jTextFieldPrecio.getText().toString());
            String rubro = jComboCategoria.getSelectedItem().toString();
            int stock = (Integer) jSpinnerStock.getValue();
            Producto producto = new Producto(codigo, descripcion, precio, rubro, stock);
            Supermercado_DeTodo mercado = new Supermercado_DeTodo();          
            mercado.eliminarProducto(producto);                    
            JOptionPane.showMessageDialog(this, "Producto Eliminado");
            limpiarCasillas();
            borrarFilasTablas();
            cargarFilas();
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
      this.dispose();
      
    }//GEN-LAST:event_jButtonCerrarActionPerformed

    private void jComboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboCategoriaActionPerformed
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonBusqueda;
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JComboBox<String> jComboCategoria;
    private javax.swing.JComboBox<String> jComboFiltrarCategoria;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerStock;
    private javax.swing.JTable jTableProductos;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldDescripcion;
    private javax.swing.JTextField jTextFieldPrecio;
    // End of variables declaration//GEN-END:variables
    public void cargarCombo(){
        jComboCategoria.addItem("-");
        jComboCategoria.addItem("Comestible");
        jComboCategoria.addItem("Limpieza");
        jComboCategoria.addItem("Perfumeria");
        jComboFiltrarCategoria.addItem("-");
        jComboFiltrarCategoria.addItem("Comestible");
        jComboFiltrarCategoria.addItem("Limpieza");
        jComboFiltrarCategoria.addItem("Perfumeria");
    }
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable(int fila, int columna){
            return false;
        }
    };
    private void armarTabla(){
        modelo.addColumn("Codigo");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Precio");
        modelo.addColumn("Categoria");
        modelo.addColumn("Stock");
        jTableProductos.setModel(modelo);
    }
    private void cargarFilas() {
        for (Producto listaProducto : Supermercado_DeTodo.listaProductos) {
            modelo.addRow(new Object[]{
                listaProducto.getCodigo(),
                listaProducto.getDescripcion(),
                listaProducto.getPrecio(),
                listaProducto.getRubro(),
                listaProducto.getStock()                
            });
        }    
    }
    private void borrarFilasTablas(){
        int fila= modelo.getRowCount()-1;
        for (int i = fila ; i >= 0 ; i--) {
            modelo.removeRow(i);
        }
    }
    public void limpiarCasillas(){
        jTextFieldCodigo.setText("");
        jTextFieldDescripcion.setText("");
        jTextFieldPrecio.setText("");
        jComboCategoria.setSelectedItem("-");
        jSpinnerStock.setValue(0);
    }
    public static boolean soloNumeros(String cadena) {
        // Expresión regular para que solo permita números (del 0 al 9)
        Pattern pattern = Pattern.compile("[^0-9.]"); // Cualquier carácter que no sea un dígito
        Matcher matcher = pattern.matcher(cadena);

        // Retorna true si NO encuentra caracteres que no sean dígitos, es decir, solo números
        return !matcher.find();
    }
    public boolean comprobarCasillas(){
        boolean comprobar=true;
        if (jTextFieldCodigo.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Llenar campo Codigo"); 
            comprobar=false;
        }else if (!soloNumeros(jTextFieldCodigo.getText())) {
                JOptionPane.showMessageDialog(this, "Llenar campo Codigo, con numeros unicamente");
                comprobar=false;
        }else if(jTextFieldDescripcion.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Llenar campo Descripcion");
            comprobar=false;
        }else if(jTextFieldPrecio.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Llenar campo Precio"); 
            comprobar=false;
        }else if(!soloNumeros(jTextFieldPrecio.getText())){
            JOptionPane.showMessageDialog(this, "Llenar campo Precio, con numeros unicamente"); 
            comprobar=false;
        }else if(jComboCategoria.getSelectedItem().toString().equals("-")){
            JOptionPane.showMessageDialog(this, "Elegir un campo para el Rubro");
            comprobar=false;
        }else if((Integer) jSpinnerStock.getValue()<= 0){
            JOptionPane.showMessageDialog(this, "La cantidad de Stock no puede ser 0 o menor");
            comprobar=false;
        }
        return comprobar;
    }
}
